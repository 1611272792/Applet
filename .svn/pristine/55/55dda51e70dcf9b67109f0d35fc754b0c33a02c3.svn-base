using SUNPN.BONUS.Common;
using SUNPN.BONUS.DALFactory;
using SUNPN.BONUS.IDAL;
using SUNPN.BONUS.Model;
using System;
using System.Data;

namespace SUNPN.BONUS.BLL
{
    public class BonusRuleBLL
    {
        #region 状态码枚举
        string strSucess = Convert.ToInt32(Enum.GetValues(typeof(EnumParam.Code)).GetValue(0)).ToString();
        string strFail = Convert.ToInt32(Enum.GetValues(typeof(EnumParam.Code)).GetValue(1)).ToString();
        #endregion

        #region 定义变量 用户数据访问层
        /// <summary>
        /// 用户数据访问层
        /// </summary>
        private readonly IBonusRule dal = DataAccess.CreateBonusRule();

        #endregion

        #region 添加奖金规则
        /// <summary>
        /// 添加奖金规则
        /// </summary>
        /// <param name="br"></param>
        /// <returns></returns>
        public string AddBonusRule(BonusRule br)
        {
            if (string.IsNullOrEmpty(br.BonusItemId))
            {
                return "BonusItemId Is Null";
            }
            try
            {
                string strmes = dal.AddBonusRule(br);
                if (strmes == "ok")
                {
                    return ResponseHandle<object>.GetResult(strSucess, "", "");
                }
                else if (strmes == "no")
                {
                    return ResponseHandle<object>.GetResult(strFail, "添加失败", "");
                }
                else
                {
                    return ResponseHandle<object>.GetResult(strFail, strmes, "");
                }
            }
            catch (Exception ex)
            {
                return ResponseHandle<object>.GetResult(strFail, ex.Message, "");
            }
        }
        #endregion

        #region 删除奖金规则
        /// <summary>
        /// 通过奖金规则Id删除奖金规则
        /// </summary>
        /// <param name="BRId">规则Id</param>
        /// <returns></returns>
        public string DelBonusRule(string BRId)
        {
            if (string.IsNullOrEmpty(BRId))
            {
                return "BRId Is Null";
            }
            try
            {
                string strmes = dal.DelBonusRule(BRId);
                if (strmes == "ok")
                {
                    return ResponseHandle<object>.GetResult(strSucess, "", "");
                }
                else if (strmes == "no")
                {
                    return ResponseHandle<object>.GetResult(strFail, "删除失败", "");
                }
                else
                {
                    return ResponseHandle<object>.GetResult(strFail, strmes, "");
                }
            }
            catch (Exception ex)
            {
                return ResponseHandle<object>.GetResult(strFail, ex.Message, "");
            }
        }
        #endregion

        #region 更新奖金规则
        /// <summary>
        /// 更新奖金规则
        /// </summary>
        /// <param name="br"></param>
        /// <returns></returns>
        public string UpdBonusRule(BonusRule br)
        {
            if (string.IsNullOrEmpty(br.BRId))
            {
                return "BRId Is Null";
            }
            try
            {
                string strmes = dal.UpdBonusRule(br);
                if (strmes == "ok")
                {
                    return ResponseHandle<object>.GetResult(strSucess, "", "");
                }
                else if (strmes == "no")
                {
                    return ResponseHandle<object>.GetResult(strFail, "修改失败", "");
                }
                else
                {
                    return ResponseHandle<object>.GetResult(strFail, strmes, "");
                }
            }
            catch (Exception ex)
            {
                return ResponseHandle<object>.GetResult(strFail, ex.Message, "");
            }
        }
        #endregion

        #region 查询奖金规则
        /// <summary>
        /// 查询奖金规则
        /// </summary>
        /// <param name="BRId">规则Id</param>
        /// <returns></returns>
        public string GetBonusRule(string BRId)
        {
            if (string.IsNullOrEmpty(BRId))
            {
                return "BRId Is Null";
            }
            try
            {
                DataTable dtbmes = dal.GetBonusRule(BRId);
                if (dtbmes.Rows.Count >= 0)
                {
                    return ResponseHandle<object>.GetResult(strSucess, "", dtbmes);
                }
                else
                {
                    return ResponseHandle<object>.GetResult(strSucess, "查询失败", "");
                }
            }
            catch (Exception ex)
            {
                return ResponseHandle<object>.GetResult(strSucess, ex.Message, "");
            }
        }
        #endregion

        #region 添加固定金额
        /// <summary>
        /// 添加固定金额
        /// </summary>
        /// <param name="br"></param>
        /// <returns></returns>
        public string AddGDMoney(BonusItemData bid)
        {
            if (string.IsNullOrEmpty(bid.BonusItemId))
            {
                return "BonusItemId Is Null";
            }
            try
            {
                string strmes = dal.AddGDMoney(bid);
                if (strmes == "ok")
                {
                    return ResponseHandle<object>.GetResult(strSucess, "", "");
                }
                else if (strmes == "no")
                {
                    return ResponseHandle<object>.GetResult(strFail, "添加失败", "");
                }
                else
                {
                    return ResponseHandle<object>.GetResult(strFail, strmes, "");
                }
            }
            catch (Exception ex)
            {
                return ResponseHandle<object>.GetResult(strFail, ex.Message, "");
            }
        }
        #endregion

    }
}
