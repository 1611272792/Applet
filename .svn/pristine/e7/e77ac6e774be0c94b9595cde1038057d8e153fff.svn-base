/*
 * 创建者           刘志成
 * 更新时间         2018-07-30
*/
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using SUNPN.BONUS.BLL;
using SUNPN.BONUS.Model;
using SUNPN.BONUS.Model.UserClass.EditUser;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Text;
using System.Web;
using System.Web.Http;

namespace SUNPN.BONUS.API.Areas.Sys.Controllers
{
    public class UserController : ApiController
    {
        #region 定义变量
        /// <summary>
        /// 用户业务逻辑类
        /// </summary>
        UserBLL userBLL = new UserBLL();
        #endregion

        #region 获取用户OpenId
        /// <summary>
        /// GetOpenID
        /// </summary>
        /// <param name="appid"></param>
        /// <param name="secret"></param>
        /// <param name="js_code"></param>
        /// <param name="grant_type"></param>
        /// <returns></returns>
        [HttpGet]
        public string GetOpenID(string appid, string secret, string js_code, string grant_type)
        {
            //string appid, string secret, string js_code, string grant_type
            //string appid = "wxc8f3e894c6694d3b";
            //string secret = "ffe51fc62a5924dda9b7576c39e83dc3";
            //string js_code = "033VfMtJ1fwdM60UDgsJ1zuotJ1VfMt9";
            //string grant_type = "authorization_code";
            try
            {
                var infoUrl = string.Format("https://api.weixin.qq.com/sns/jscode2session?appid={0}&secret={1}&js_code={2}&grant_type={3}", appid, secret, js_code, grant_type);
                return MyPost(infoUrl);
            }
            catch (Exception ex)
            {
                return ex.Message;
            }
        }

        /// <summary>
        /// OpenId请求方法
        /// </summary>
        /// <param name="url"></param>
        /// <returns></returns>
        [HttpGet]
        public string MyPost(string url)
        {
            try
            {
                //发送请求
                var request = (HttpWebRequest)WebRequest.Create(url);
                var response = (HttpWebResponse)request.GetResponse();
                //接收数据
                var responseString = new StreamReader(response.GetResponseStream()).ReadToEnd();
                JObject j = (JObject)JsonConvert.DeserializeObject(responseString);
                return j.GetValue("openid").ToString();
            }
            catch (Exception ex)
            {
                return ex.Message;
            }
        }
        #endregion

        #region 注册用户
        /// <summary>
        /// 注册用户
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public HttpResponseMessage AddUser([FromBody]User user)
        {
            #region 旧逻辑
            ////[FromBody]User user
            //User user = new User();
            ////user.OpenId = "033E1cZ82rNiJQ0SS9292qejZ82E1cZk";//唯一主键
            ////user.UserId = "lzc123";//UserId
            ////user.UserPwd = "lzc123";//密码
            ////user.UserName = "刘志成";//姓名
            ////user.UserPhone = "18827507367";//手机号
            ////user.Photo = "lzclogo.jpg";//头像
            ////user.Sex = "1";//性别sex
            ////user.Birth = "1997-10-14";//生日
            user.IsOut = "3";//是否离职(0不离职；1离职；2注销系统；3已注册未通过)
            ////user.CompanyId = "10101010101";//公司Id  (guid)

            //user.OpenId = HttpContext.Current.Request["OpenId"];
            //user.UserId = HttpContext.Current.Request["UserId"];
            //user.UserPwd = HttpContext.Current.Request["UserPwd"];
            //user.UserName = HttpContext.Current.Request["UserName"];
            //user.Sex = HttpContext.Current.Request["Sex"];
            //user.CompanyId = HttpContext.Current.Request["CompanyId"];
            //user.Birth = HttpContext.Current.Request["Birth"];
            //user.UserPhone = HttpContext.Current.Request["UserPhone"];
            //user.IsOut = HttpContext.Current.Request["IsOut"];
            ////WriteLog("user.OpenId:" + user.OpenId);
            ////WriteLog("user.UserId:" + user.UserId);
            ////WriteLog("user.UserName:" + user.UserName);
            //////获取图片

            //HttpPostedFile file = HttpContext.Current.Request.Files["image"];
            //if (file != null)
            //{
            //    //WriteLog("file:" + file);
            //    //图片的名字 
            //    string strFileName = DateTime.Now.ToString("yyyyMMddHHmmssfff") + ".jpg";
            //    //WriteLog("filename:" + strFileName);
            //    //路径
            //    string strFilePath = HttpContext.Current.Server.MapPath("~/Images/UserPhoto/") + strFileName;
            //    //图片路径
            //    user.Photo = "/Images/UserPhoto/" + strFileName;
            //    //WriteLog("photo:" + user.Photo);
            //    file.SaveAs(strFilePath);
            //}
            //else
            //{
            //    user.Photo = null;
            //}
            ////多图上传
            ////HttpContext context = HttpContext.Current;
            ////HttpFileCollection files = context.Request.Files;
            ////string path = context.Request.MapPath("~/");
            ////string strPath = path + "App_Data/";
            ////for (int i = 0; i < files.Count; i++)
            ////{
            ////    strPath += files[i].FileName;
            ////    files[i].SaveAs(strPath);
            ////}
            ////context.Response.Clear();
            ////context.Response.Write(strPath);
            ////context.Response.End(); 
            #endregion
            return new HttpResponseMessage { Content = new StringContent(userBLL.AddUser(user), Encoding.GetEncoding("UTF-8"), "text/json") };

        }
        #endregion

        #region 注册用户
        /// <summary>
        /// 注册用户
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public HttpResponseMessage AddUser2()
        {
            //[FromBody]User user
            User user = new User();
            //user.OpenId = "033E1cZ82rNiJQ0SS9292qejZ82E1cZk";//唯一主键
            //user.UserId = "lzc123";//UserId
            //user.UserPwd = "lzc123";//密码
            //user.UserName = "刘志成";//姓名
            //user.UserPhone = "18827507367";//手机号
            //user.Photo = "lzclogo.jpg";//头像
            //user.Sex = "1";//性别sex
            //user.Birth = "1997-10-14";//生日
            //user.IsOut = "0";//是否离职(0不离职；1离职；2注销系统；3已注册未通过)
            //user.CompanyId = "10101010101";//公司Id  (guid)

            user.OpenId = HttpContext.Current.Request["OpenId"];
            user.UserId = HttpContext.Current.Request["UserId"];
            user.UserPwd = HttpContext.Current.Request["UserPwd"];
            user.UserName = HttpContext.Current.Request["UserName"];
            user.Sex = HttpContext.Current.Request["Sex"];
            //user.CompanyId = HttpContext.Current.Request["CompanyId"];
            user.Birth = HttpContext.Current.Request["Birth"];
            user.UserPhone = HttpContext.Current.Request["UserPhone"];
            user.IsOut = HttpContext.Current.Request["IsOut"];
            //WriteLog("user.OpenId:" + user.OpenId);
            //WriteLog("user.UserId:" + user.UserId);
            //WriteLog("user.UserName:" + user.UserName);
            ////获取图片

            HttpPostedFile file = HttpContext.Current.Request.Files["image"];
            if (file != null)
            {
                //WriteLog("file:" + file);
                //图片的名字 
                string strFileName = DateTime.Now.ToString("yyyyMMddHHmmssfff") + ".jpg";
                //WriteLog("filename:" + strFileName);
                //路径
                string strFilePath = HttpContext.Current.Server.MapPath("~/Images/UserPhoto/") + strFileName;
                //图片路径
                user.Photo = "/Images/UserPhoto/" + strFileName;
                //WriteLog("photo:" + user.Photo);
                file.SaveAs(strFilePath);
            }
            else
            {
                user.Photo = null;
            }


            //多图上传
            //HttpContext context = HttpContext.Current;
            //HttpFileCollection files = context.Request.Files;
            //string path = context.Request.MapPath("~/");
            //string strPath = path + "App_Data/";
            //for (int i = 0; i < files.Count; i++)
            //{
            //    strPath += files[i].FileName;
            //    files[i].SaveAs(strPath);
            //}
            //context.Response.Clear();
            //context.Response.Write(strPath);
            //context.Response.End();
            return new HttpResponseMessage { Content = new StringContent(userBLL.AddUser2(user), Encoding.GetEncoding("UTF-8"), "text/json") };

        }
        #endregion

        #region 判断此用户的OpenId是否注册过
        /// <summary>
        /// 判断用户是否已经注册过
        /// </summary>
        /// <param name="OpenId">用户OpenId</param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage CheckReg(string OpenId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.CheckReg(OpenId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }

        #endregion

        #region 修改用户信息

        #region 管理员修改信息
        [HttpPost]
        public HttpResponseMessage UpdMUser([FromBody] MEditUser meuser)
        {
            //MEditUser meuser = new MEditUser();
            //meuser.JoinDate = HttpContext.Current.Request["JoinDate"];
            //meuser.IsOut = HttpContext.Current.Request["IsOut"];
            //meuser.DepId = HttpContext.Current.Request["DepId"];
            //meuser.PostId = HttpContext.Current.Request["PostId"];
            //meuser.CompanyId = HttpContext.Current.Request["CompanyId"];
            //meuser.RoleId = HttpContext.Current.Request["RoleId"];
            //meuser.OpenId = HttpContext.Current.Request["OpenId"];
            return new HttpResponseMessage { Content = new StringContent(userBLL.UpdMUser(meuser), Encoding.GetEncoding("UTF-8"), "text/json") };
        }

        #endregion

        #region 修改自己信息
        [HttpPost]
        public HttpResponseMessage UpdIUser()
        {
            IEditUser ieuser = new IEditUser();
            ieuser.UserName = HttpContext.Current.Request["UserName"];
            ieuser.UserPwd = HttpContext.Current.Request["UserPwd"];
            HttpPostedFile file = HttpContext.Current.Request.Files["image"];
            if (file != null)
            {
                string strFileName = file.FileName;
                ieuser.Photo = "/Images/UserPhoto/" + strFileName;
                //路径
                string strFilePath = HttpContext.Current.Server.MapPath("~/Images/UserPhoto/") + strFileName;
                //图片路径
                file.SaveAs(strFilePath);
            }
            else
            {
                ieuser.Photo = null;
            }
            ieuser.Sex = HttpContext.Current.Request["Sex"];
            ieuser.Birth = HttpContext.Current.Request["Birth"];
            ieuser.OpenId = HttpContext.Current.Request["OpenId"];
            return new HttpResponseMessage { Content = new StringContent(userBLL.UpdIUser(ieuser), Encoding.GetEncoding("UTF-8"), "text/json") };
        }

        #endregion
        #endregion

        #region 修改logo
        /// <summary>
        /// 修改logo
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public HttpResponseMessage Updlogo()
        {
            IEditUser ieuser = new IEditUser();
            HttpPostedFile file = HttpContext.Current.Request.Files["image"];
            if (file != null)
            {
                string strFileName = file.FileName;
                ieuser.Photo = "/Images/UserPhoto/" + strFileName;
                //路径
                string strFilePath = HttpContext.Current.Server.MapPath("~/Images/UserPhoto/") + strFileName;
                //图片路径
                file.SaveAs(strFilePath);
            }
            else
            {
                ieuser.Photo = null;
            }
            ieuser.OpenId = HttpContext.Current.Request["OpenId"];
            return new HttpResponseMessage { Content = new StringContent(userBLL.UpdLogo(ieuser), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 修改个人信息
        /// <summary>
        /// 修改个人信息
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public HttpResponseMessage UpdBaseInfo()
        {
            IEditUser ieuser = new IEditUser();
            ieuser.Sex = HttpContext.Current.Request["Sex"];
            ieuser.UserPhone = HttpContext.Current.Request["UserPhone"];
            ieuser.Birth = HttpContext.Current.Request["Birth"];
            ieuser.OpenId = HttpContext.Current.Request["OpenId"];
            return new HttpResponseMessage { Content = new StringContent(userBLL.UpdBaseInfo(ieuser), Encoding.GetEncoding("UTF-8"), "text/json") };
        } 
        #endregion

        #region 根据用户OpenId获取用户信息
        /// <summary>
        /// 根据用户OpenId获取用户信息
        /// </summary>
        /// <param name="OpenId">用户OpenId获取用户信息</param>
        /// <returns></returns>
        public HttpResponseMessage GetUserInfo(string OpenId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.GetUserInfo(OpenId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 删除用户
        /// <summary>
        /// 删除用户
        /// </summary>
        /// <param name="OpenId"></param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage DelUser(string OpenId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.DelUser(OpenId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 查询要进入我们公司的人
        /// <summary>
        /// 查询要进入我们公司的人
        /// </summary>
        /// <param name="CompanyId">公司id</param>
        /// <param name="IsOut">离职状态</param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage GetWaitUser(string CompanyId, string IsOut)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.GetWaitUser(CompanyId, IsOut), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 查询公司所有人（测试）
        /// <summary>
        /// 员工管理--获取父级部门列表
        /// </summary>
        /// <param name="CompanyId">公司Id</param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage GetAllUser(string CompanyId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.GetAlluser(CompanyId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 员工管理--获取父级部门列表
        /// <summary>
        /// 员工管理--获取父级部门列表
        /// </summary>
        /// <param name="CompanyId">公司Id</param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage GetParList(string CompanyId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.GetParList(CompanyId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 员工管理--根据公司Id和部门Id查询其对应的所有子部门列表和人员列表
        /// <summary>
        /// 员工管理--根据公司Id和部门Id查询其对应的所有子部门列表和人员列表
        /// </summary>
        /// <param name="CompanyId">公司Id</param>
        /// <param name="DepId">部门Id</param>
        /// <returns></returns>
        [HttpGet]
        public HttpResponseMessage GetDepUserInfo(string CompanyId, string DepId)
        {
            return new HttpResponseMessage { Content = new StringContent(userBLL.GetDepUserInfo(CompanyId, DepId), Encoding.GetEncoding("UTF-8"), "text/json") };
        }
        #endregion

        #region 日志
        private void WriteLog(string strmsg)
        {
            strmsg = $"{strmsg}\r\n";
            using (FileStream fs = System.IO.File.Open("D:\\User.txt", FileMode.Append, FileAccess.Write, FileShare.Write))
            {
                byte[] bys = Encoding.Default.GetBytes(strmsg);
                fs.Write(bys, 0, bys.Length);
                fs.Close();
            }
        }
        #endregion
    }
}
